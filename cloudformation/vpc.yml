AWSTemplateFormatVersion: 2010-09-09
Description: 'VPC resources'
Parameters:
  AvailabilityZones:
    Default: 'us-east-2a, us-east-2b'
    Type: 'List<AWS::EC2::AvailabilityZone::Name>'
  PrivateSubnet1CIDR:
    Default: 10.72.0.0/24
    Description: CIDR block for private subnet in Availability Zone 1 must be in the form x.x.x.x/20-24
    Type: String
  PrivateSubnet2CIDR:
    Default: 10.72.1.0/24
    Description: CIDR block for private subnet in Availability Zone 2 must be in the form x.x.x.x/20-24
    Type: String
  PublicSubnet1CIDR:
    Default: 10.72.2.0/24
    Description: CIDR block for public subnet in Availability Zone 1 must be in the form x.x.x.x/20-24
    Type: String
  PublicSubnet2CIDR:
    Default: 10.72.3.0/24
    Description: CIDR block for public subnet in Availability Zone 2 must be in the form x.x.x.x/20-24
    Type: String
  VPCCIDR:
    Default: 10.72.0.0/16
    Description: CIDR block for the VPC must be in the form x.x.x.x/16
    Type: String
Conditions:
  NVirginiaRegionCondition: !Equals
    - !Ref 'AWS::Region'
    - us-east-1
Resources:
  DHCPOptions:
    Type: 'AWS::EC2::DHCPOptions'
    Properties:
      DomainName: !If
        - NVirginiaRegionCondition
        - ec2.internal
        - !Join
          - ''
          - - !Ref 'AWS::Region'
            - .compute.internal
      DomainNameServers:
        - AmazonProvidedDNS
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
  VPCDHCPOptionsAssociation:
    Type: 'AWS::EC2::VPCDHCPOptionsAssociation'
    Properties:
      VpcId: !Ref VPC
      DhcpOptionsId: !Ref DHCPOptions
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
        - Key: Network
          Value: Public
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  ## Private subnets
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      AvailabilityZone: !Select
        - '0'
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: PrivateSubnet1
        - Key: Network
          Value: Private
  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      AvailabilityZone: !Select
        - '1'
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: PrivateSubnet2
        - Key: Network
          Value: Private
  ## Public subnets
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      AvailabilityZone: !Select
        - '0'
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: PublicSubnet1
        - Key: Network
          Value: Public
      MapPublicIpOnLaunch: true
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      AvailabilityZone: !Select
        - '1'
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: Public subnet 2
        - Key: Network
          Value: Public
      MapPublicIpOnLaunch: true
  ## Routing tables
  PrivateSubnet1RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Private subnet 1
        - Key: Network
          Value: Private
  PrivateSubnet1Route:
    Type: 'AWS::EC2::Route'
    DependsOn: 'NATGateway1'
    Properties:
      RouteTableId: !Ref PrivateSubnet1RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway1
  PrivateSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateSubnet1RouteTable

  PrivateSubnet2RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Private subnet 2
        - Key: Network
          Value: Private
  PrivateSubnet2Route:
    Type: 'AWS::EC2::Route'
    DependsOn: 'NATGateway2'
    Properties:
      RouteTableId: !Ref PrivateSubnet2RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway2
  PrivateSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateSubnet2RouteTable

  PublicSubnetRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public Subnets
        - Key: Network
          Value: Public
  PublicSubnetRoute:
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicSubnetRouteTable
  PublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicSubnetRouteTable

  NAT1EIP:
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  NAT2EIP:
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc

  NATGateway1:
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt
        - NAT1EIP
        - AllocationId
      SubnetId: !Ref PublicSubnet1
  NATGateway2:
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt
        - NAT2EIP
        - AllocationId
      SubnetId: !Ref PublicSubnet2

  ### Security groups
  SSHSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
      Tags:
        -
          Key: "Name"
          Value: "SSH"
  WebSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http(s) access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
      Tags:
        -
          Key: "Name"
          Value: "Web"
  VPCLocalSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow local traffic
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: "-1"
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: !Ref VPCCIDR
      Tags:
        -
          Key: "Name"
          Value: "VPCLocalTraffic"

Outputs:
  PrivateSubnet1CIDR:
    Description: Private subnet NET in AZ 1
    Value: !Ref PrivateSubnet1CIDR
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet1CIDR'
  PrivateSubnet1ID:
    Description: Private subnet ID in AZ 1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet1ID'
  PrivateSubnet2CIDR:
    Description: Private subnet NET in AZ 2
    Value: !Ref PrivateSubnet2CIDR
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet2CIDR'
  PrivateSubnet2ID:
    Description: Private subnet ID in AZ 2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet2ID'
  PublicSubnet1CIDR:
    Description: Public subnet NET in AZ 1
    Value: !Ref PublicSubnet1CIDR
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet1CIDR'
  PublicSubnet1ID:
    Description: Public subnet ID in AZ 1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet1ID'
  PublicSubnet2CIDR:
    Description: Public subnet NET in AZ 2
    Value: !Ref PublicSubnet2CIDR
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet2CIDR'
  PublicSubnet2ID:
    Description: Public subnet ID in AZ 2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet2ID'
  VPCCIDR:
    Value: !Ref VPCCIDR
    Description: VPC NET
    Export:
      Name: !Sub '${AWS::StackName}-VPCCIDR'
  VPCID:
    Value: !Ref VPC
    Description: VPC ID
    Export:
      Name: !Sub '${AWS::StackName}-VPCID'
  SSHSG:
    Description: SSH SG
    Value: !Ref SSHSG
    Export:
      Name: !Sub '${AWS::StackName}-SSHSG'
  WebSG:
    Description: Web SG
    Value: !Ref WebSG
    Export:
      Name: !Sub '${AWS::StackName}-WebSG'
  VPCLocalSG:
    Description: VPC Local Traffic SG
    Value: !Ref VPCLocalSG
    Export:
      Name: !Sub '${AWS::StackName}-VPCLocalSG'